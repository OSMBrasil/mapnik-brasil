/*
 * Base MapCSS
 *
 * To contain main rules (Sub-rules might be imported)
 */
meta {
	version:			"0.1";
	author:				"Aun Johnsen";
	description: 		"Mapnik for Brazil";
}
 
/*
 * Background is sea
 */
canvas {
	fill-color:			lightblue;
	antialiasing:		full;
}
 
/*
 * Fill color for land
 */
area[natural=coastline], relation[natural=coastline] {
	fill-color:			snow;
}
 
/*
 * Different base color for Federal and State highways
 */
way[highway] {
	color:				darkgray;
	casing-color:		darkgray;
	casing-width:		4;
	set .highway;
}
 
way[highway][network="BR:AC"], relation[type=route][route=road][network="BR:AC"] > way[highway], way[highway][ref^=AC-], relation[type=route][route=road][ref^=AC-] > way[highway],
way[highway][network="BR:AL"], relation[type=route][route=road][network="BR:AL"] > way[highway], way[highway][ref^=AL-], relation[type=route][route=road][ref^=AL-] > way[highway],
way[highway][network="BR:AP"], relation[type=route][route=road][network="BR:AP"] > way[highway], way[highway][ref^=AP-], relation[type=route][route=road][ref^=AP-] > way[highway],
way[highway][network="BR:AM"], relation[type=route][route=road][network="BR:AM"] > way[highway], way[highway][ref^=AM-], relation[type=route][route=road][ref^=AM-] > way[highway],
way[highway][network="BR:BA"], relation[type=route][route=road][network="BR:BA"] > way[highway], way[highway][ref^=BA-], relation[type=route][route=road][ref^=BA-] > way[highway],
way[highway][network="BR:CE"], relation[type=route][route=road][network="BR:CE"] > way[highway], way[highway][ref^=CE-], relation[type=route][route=road][ref^=CE-] > way[highway],
way[highway][network="BR:DF"], relation[type=route][route=road][network="BR:DF"] > way[highway], way[highway][ref^=DF-], relation[type=route][route=road][ref^=DF-] > way[highway],
way[highway][network="BR:ES"], relation[type=route][route=road][network="BR:ES"] > way[highway], way[highway][ref^=ES-], relation[type=route][route=road][ref^=ES-] > way[highway],
way[highway][network="BR:GO"], relation[type=route][route=road][network="BR:GO"] > way[highway], way[highway][ref^=GO-], relation[type=route][route=road][ref^=GO-] > way[highway],
way[highway][network="BR:MA"], relation[type=route][route=road][network="BR:MA"] > way[highway], way[highway][ref^=MA-], relation[type=route][route=road][ref^=MA-] > way[highway],
way[highway][network="BR:MT"], relation[type=route][route=road][network="BR:MT"] > way[highway], way[highway][ref^=MT-], relation[type=route][route=road][ref^=MT-] > way[highway],
way[highway][network="BR:MS"], relation[type=route][route=road][network="BR:MS"] > way[highway], way[highway][ref^=MS-], relation[type=route][route=road][ref^=MS-] > way[highway],
way[highway][network="BR:MG"], relation[type=route][route=road][network="BR:MG"] > way[highway], way[highway][ref^=MG-], relation[type=route][route=road][ref^=MG-] > way[highway],
way[highway][network="BR:PA"], relation[type=route][route=road][network="BR:PA"] > way[highway], way[highway][ref^=PA-], relation[type=route][route=road][ref^=PA-] > way[highway],
way[highway][network="BR:PB"], relation[type=route][route=road][network="BR:PB"] > way[highway], way[highway][ref^=PB-], relation[type=route][route=road][ref^=PB-] > way[highway],
way[highway][network="BR:PR"], relation[type=route][route=road][network="BR:PR"] > way[highway], way[highway][ref^=PR-], relation[type=route][route=road][ref^=PR-] > way[highway],
way[highway][network="BR:PE"], relation[type=route][route=road][network="BR:PE"] > way[highway], way[highway][ref^=PE-], relation[type=route][route=road][ref^=PE-] > way[highway],
way[highway][network="BR:PI"], relation[type=route][route=road][network="BR:PI"] > way[highway], way[highway][ref^=PI-], relation[type=route][route=road][ref^=PI-] > way[highway],
way[highway][network="BR:RJ"], relation[type=route][route=road][network="BR:RJ"] > way[highway], way[highway][ref^=RJ-], relation[type=route][route=road][ref^=RJ-] > way[highway],
way[highway][network="BR:RN"], relation[type=route][route=road][network="BR:RN"] > way[highway], way[highway][ref^=RN-], relation[type=route][route=road][ref^=RN-] > way[highway],
way[highway][network="BR:RS"], relation[type=route][route=road][network="BR:RS"] > way[highway], way[highway][ref^=RS-], relation[type=route][route=road][ref^=RS-] > way[highway],
way[highway][network="BR:RO"], relation[type=route][route=road][network="BR:RO"] > way[highway], way[highway][ref^=RO-], relation[type=route][route=road][ref^=RO-] > way[highway],
way[highway][network="BR:RR"], relation[type=route][route=road][network="BR:RR"] > way[highway], way[highway][ref^=RR-], relation[type=route][route=road][ref^=RR-] > way[highway],
way[highway][network="BR:SC"], relation[type=route][route=road][network="BR:SC"] > way[highway], way[highway][ref^=SC-], relation[type=route][route=road][ref^=SC-] > way[highway],
way[highway][network="BR:SP"], relation[type=route][route=road][network="BR:SP"] > way[highway], way[highway][ref^=SP-], relation[type=route][route=road][ref^=SP-] > way[highway],
way[highway][network="BR:SE"], relation[type=route][route=road][network="BR:SE"] > way[highway], way[highway][ref^=SE-], relation[type=route][route=road][ref^=SE-] > way[highway],
way[highway][network="BR:TO"], relation[type=route][route=road][network="BR:TO"] > way[highway], way[highway][ref^=TO-], relation[type=route][route=road][ref^=TO-] > way[highway] {
	color:				darkgreen; /* State Highway */
	casing-color:		darkgreen;
	casing-width:		4;
	set .rodovia_estadual;
	set .highway;
}
way[highway][network=BR], relation[type=route][route=road][network=BR] > way[highway], relation[type=route][route=road][ref^=BR-] > way[highway], way[highway][ref^=BR-] {
	color:				darkred; /* Federal Highway */
	casing-color:		darkred;
	casing-width:		4;
	set .rodovia_federal;
	set .highway;
}
relation[type=route][route=road][network=BR] > way.rodovia_estadual, relation[type=route][route=road][ref^=BR-] > way.rodovia_estadual {
	color:				darkred;
	casing-color:		darkgreen;
	casing-width:		4;
	set .highway;
}

way|z-10[highway][surface=unpaved].highway {
	color:				white;
/*	casing-width:		2; */
	set	.highway;
}
way|z10-[highway][surface=unpaved].highway {
	color:				lightgray;
	casing-width:		2;
	set .highway;
}
way|z10-[highway][surface=cobblestone].highway {
	color:				brown;
	casing-width:		2;
	set	.highway;
}

way|z10-[highway=planned].highway {
	color:				white;
	width:				7;
	dashes:				20,20,10,20;
	casing-dashes:		20,20,10,20;
}

way|z8-[highway=construction].highway {
	color:				white;
	width:				7;
	dashes:				20,20;
	casing-dashes:		20,20;
}

way|z8-[highway=road].highway {
	width:				6;
	dashes:				20,20;
	dashes-background-color:	red; /* This is JOSM syntax, dont know how this will work */
}

way|z14-[highway=path].highway {
	color:				green;
	casing-width:		1;
	casing-color:		brown;
	dashes:				6,4,4,4;
}
way|z14-[highway=footway].highway {
	color:				limegreen;
	casing-color:		limegreen;
	casing-width:		2;
}
way|z12-[highway=cycleway].highway {
	color:				violet;
	casing-color:		violet;
	casing-width:		2;
}
way|z12-[highway=track].highway {
	casing-width:		2;
	casing-color:		brown;
}
way|z12-[highway=track][tracktype=grade1].highway {
	dashes:				10,4,8,4;
}
way|z12-[highway=track][tracktype=grade2].highway {
	dashes:				10,4,6,4;
}
way|z12-[highway=track][tracktype=grade3].highway {
	dashes:				10,4,4,4;
}
way|z12-[highway=track][tracktype=grade4].highway {
	dashes:				10,4,2,4;
}
way|z12-[highway=track][tracktype=grade5].highway {
	dashes:				10,6,2,6;
}

way|z10-[highway=service].highway,
way|z10-[highway=residential].highway {
	width:				5;
}

way|z10-[highway=unclassified].highway {
	width:				4;
}

way|z8-[highway=tertiary_link].highway {
	width:				6;
}
way|z6-[highway=tertiary].highway {
	width:				6;
}

way|z7-[highway=secondary_link].highway {
	width:				8;
}
way|z6-[highway=secondary].highway {
	width:				8;
}

way|z6-[highway=primary_link].highway {
	width:				10;
}
way|z4-[highway=primary].highway {
	width:				10;
}

way|z4-[highway=trunk_link].highway {
	width:				12;
}
way|z3-[highway=trunk].highway {
	width:				4;
	casing-width:		8;
	color:				white;
}

way|z4-[highway=motorway_link].highway {
	width:				14;
}
way|z2-[highway=motorway].highway {
	width:				4;
	casing-width:		10;
	color:				white;
}

way|z4-[highway][operator].highway::operator, relation[type=route][route=road][operator] > way[highway].highway::operator {
	/* Highway have concecionario, need to add a yellow halo to the road, in addition to the casing */
	object-z-index:		-1;
	casing-width:		+4;
	casing-color:		yellow;
}
way|z8-[higway][toll].highway::toll, relation[type=route][route=road][toll] > way[highway].highway::operator {
	/* Highway with toll fee to be rendered with a green halo on high zoom levels */
	object-z-index:		-2;
	casing-width:		+5;
	casing-color:		limegreen;
}

way|z8-[highway][noname?].highway, way[highway][unsigned?].highway, way[highway][unnamed?].highway {
	text:				eval("Sem Nome");
	text-halo-radius:	1;
	text-halo-color:	white;
	font-style:			italic;
	text-color:			gray;
}

way[highway][name].highway {
	text:				any(tag("name:pt"), tag("name"), tag("official_name"), tag("alt_name"), tag("loc_name"), tag("old_name"));
	text-color:			black;
	text-halo-radius:	1;
	text-halo-color:	white;
}
/* To force correct use of name, and use of proper tags where the streets have no name */
way|z8-[highway][name*="Sem Denominacao"].highway,
way|z8-[highway][name*="Sem Denominação"].highway,
way|z8-[highway][name*="Sem Nome"].highway {
	text:				eval("Sem Nome");
	text-halo-radius:	1;
	text-halo-color:	white;
	font-style:			italic;
	text-color:			red;
}
/* Creating shields */
way[highway][ref].highway, relation[type=route][route=road][ref] > way[highway].highway {
	/* Default shield */
	shield-text:		ref;
	shield-image:		"icons/shield-default.svg";
}
way[highway][ref].rodovia_estadual, relation[type=route][route=road][ref] > way[highway].rodovia_estadual {
	/* State Highway Shields */
	shield-text:		ref;
	shield-image:		"icons/shield-state.svg";
}
way[highway][ref].rodivia_federal, relation[type=route][route=road][ref] > way[highway].rodoovia_federal {
	/* Federal Highway Shields */
	shield-text:		ref;
	shield-image:		"icons/shield-br.svg";
}

node|z6-[barrier=toll_booth] {
	icon-image:			"icons/pedagio.svg";
	icon-width:			12;
}
@media (user-agent: pgmapcss) { node[barrier=toll_booth] near[distance<100] {
	/* No render */
	icon-image:			"icons/void.svg";
	icon-width:			0;
	icon-height:		0;
} }

node|z10-[highway=traffic_signals] {
	icon-image:			"icons/semaforo.svg";
	icon-width:			12;
}
@media (user-agent: pgmapcss) { node[highway=traffic_signals] near[distance<20] {
	/* No render */
	icon-image:			"icons/void.svg";
	icon-width:			0;
	icon-height:		0;
} }

/*
 * Waterways and water-cover
 */
*[waterway] {
	color:				darkblue;
	width:				4;
	set .waterway;
}
way[waterway=river].waterway {
	width:				8;
}
way[waterway=canal].waterway {
	width:				6;
}
way[waterway=stream].waterway {
	width:				4;
}
way[waterway=ditch].waterway {
	width:				3;
}
way[waterway=drain].waterway {
	width:				2;
}

area[natural=water],
area[waterway=riverbank] {
	fill-color:			skyblue;
}

/*
 * Urban features
 */
area[building] {
	fill-color:			orange;
}
