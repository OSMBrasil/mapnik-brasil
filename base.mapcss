/*
 * Base MapCSS
 *
 * To contain main rules (Sub-rules might be imported)
 */
meta {
	version:			"0.1";
	author:				"Aun Johnsen";
	description: 		"Mapnik for Brazil";
	min-pgmapcss-version: 0.8;
	min-josm-version:	7000;
}
 
/*
 * Background is sea
 */
canvas {
	fill-color:			lightblue;
	antialiasing:		full;
	fill-opacity:		0.1; /* Neutrilizes background in JOSM */
}
 
/*
 * Fill color for land
 */
area[natural=coastline], relation[natural=coastline] {
	fill-color:			snow;
}
 
/*
 * Different base color for Federal and State highways
 */
way[highway] {
	color:				darkgray;
	casing-color:		darkgray;
	width:				1;
	casing-width:		2;
	set .highway;
}
 
way[highway][network="BR:AC"], relation[type=route][route=road][network="BR:AC"] > way[highway], way[highway][ref^=AC-], relation[type=route][route=road][ref^=AC-] > way[highway],
way[highway][network="BR:AL"], relation[type=route][route=road][network="BR:AL"] > way[highway], way[highway][ref^=AL-], relation[type=route][route=road][ref^=AL-] > way[highway],
way[highway][network="BR:AP"], relation[type=route][route=road][network="BR:AP"] > way[highway], way[highway][ref^=AP-], relation[type=route][route=road][ref^=AP-] > way[highway],
way[highway][network="BR:AM"], relation[type=route][route=road][network="BR:AM"] > way[highway], way[highway][ref^=AM-], relation[type=route][route=road][ref^=AM-] > way[highway],
way[highway][network="BR:BA"], relation[type=route][route=road][network="BR:BA"] > way[highway], way[highway][ref^=BA-], relation[type=route][route=road][ref^=BA-] > way[highway],
way[highway][network="BR:CE"], relation[type=route][route=road][network="BR:CE"] > way[highway], way[highway][ref^=CE-], relation[type=route][route=road][ref^=CE-] > way[highway],
way[highway][network="BR:DF"], relation[type=route][route=road][network="BR:DF"] > way[highway], way[highway][ref^=DF-], relation[type=route][route=road][ref^=DF-] > way[highway],
way[highway][network="BR:ES"], relation[type=route][route=road][network="BR:ES"] > way[highway], way[highway][ref^=ES-], relation[type=route][route=road][ref^=ES-] > way[highway],
way[highway][network="BR:GO"], relation[type=route][route=road][network="BR:GO"] > way[highway], way[highway][ref^=GO-], relation[type=route][route=road][ref^=GO-] > way[highway],
way[highway][network="BR:MA"], relation[type=route][route=road][network="BR:MA"] > way[highway], way[highway][ref^=MA-], relation[type=route][route=road][ref^=MA-] > way[highway],
way[highway][network="BR:MT"], relation[type=route][route=road][network="BR:MT"] > way[highway], way[highway][ref^=MT-], relation[type=route][route=road][ref^=MT-] > way[highway],
way[highway][network="BR:MS"], relation[type=route][route=road][network="BR:MS"] > way[highway], way[highway][ref^=MS-], relation[type=route][route=road][ref^=MS-] > way[highway],
way[highway][network="BR:MG"], relation[type=route][route=road][network="BR:MG"] > way[highway], way[highway][ref^=MG-], relation[type=route][route=road][ref^=MG-] > way[highway],
way[highway][network="BR:PA"], relation[type=route][route=road][network="BR:PA"] > way[highway], way[highway][ref^=PA-], relation[type=route][route=road][ref^=PA-] > way[highway],
way[highway][network="BR:PB"], relation[type=route][route=road][network="BR:PB"] > way[highway], way[highway][ref^=PB-], relation[type=route][route=road][ref^=PB-] > way[highway],
way[highway][network="BR:PR"], relation[type=route][route=road][network="BR:PR"] > way[highway], way[highway][ref^=PR-], relation[type=route][route=road][ref^=PR-] > way[highway],
way[highway][network="BR:PE"], relation[type=route][route=road][network="BR:PE"] > way[highway], way[highway][ref^=PE-], relation[type=route][route=road][ref^=PE-] > way[highway],
way[highway][network="BR:PI"], relation[type=route][route=road][network="BR:PI"] > way[highway], way[highway][ref^=PI-], relation[type=route][route=road][ref^=PI-] > way[highway],
way[highway][network="BR:RJ"], relation[type=route][route=road][network="BR:RJ"] > way[highway], way[highway][ref^=RJ-], relation[type=route][route=road][ref^=RJ-] > way[highway],
way[highway][network="BR:RN"], relation[type=route][route=road][network="BR:RN"] > way[highway], way[highway][ref^=RN-], relation[type=route][route=road][ref^=RN-] > way[highway],
way[highway][network="BR:RS"], relation[type=route][route=road][network="BR:RS"] > way[highway], way[highway][ref^=RS-], relation[type=route][route=road][ref^=RS-] > way[highway],
way[highway][network="BR:RO"], relation[type=route][route=road][network="BR:RO"] > way[highway], way[highway][ref^=RO-], relation[type=route][route=road][ref^=RO-] > way[highway],
way[highway][network="BR:RR"], relation[type=route][route=road][network="BR:RR"] > way[highway], way[highway][ref^=RR-], relation[type=route][route=road][ref^=RR-] > way[highway],
way[highway][network="BR:SC"], relation[type=route][route=road][network="BR:SC"] > way[highway], way[highway][ref^=SC-], relation[type=route][route=road][ref^=SC-] > way[highway],
way[highway][network="BR:SP"], relation[type=route][route=road][network="BR:SP"] > way[highway], way[highway][ref^=SP-], relation[type=route][route=road][ref^=SP-] > way[highway],
way[highway][network="BR:SE"], relation[type=route][route=road][network="BR:SE"] > way[highway], way[highway][ref^=SE-], relation[type=route][route=road][ref^=SE-] > way[highway],
way[highway][network="BR:TO"], relation[type=route][route=road][network="BR:TO"] > way[highway], way[highway][ref^=TO-], relation[type=route][route=road][ref^=TO-] > way[highway] {
	color:				darkgreen; /* State Highway */
	casing-color:		darkgreen;
	casing-width:		2;
	set .rodovia_estadual;
	set .highway;
}
way[highway][network=BR], relation[type=route][route=road][network=BR] > way[highway], relation[type=route][route=road][ref^=BR-] > way[highway], way[highway][ref^=BR-] {
	color:				darkred; /* Federal Highway */
	casing-color:		darkred;
	casing-width:		2;
	set .rodovia_federal;
	set .highway;
}
relation[type=route][route=road][network=BR] > way.rodovia_estadual, relation[type=route][route=road][ref^=BR-] > way.rodovia_estadual {
	color:				darkred;
	dashes-background-color: darkred;
	casing-color:		darkgreen;
	casing-width:		2;
	set .highway;
}

/*
 * Setting default highway values where unset: surface, maxspeed, oneway, lanes
 */
@media (user-agent: pgmapcss) {
	/* highway=road to be treated as unclassified */
	way[highway] {
		set "DNIT:Class"=unknown;
	}
	way[highway=road] {
		set highway=unclassified;
	}
	/* Default surface */
	way[highway=tertiary][!surface], way[highway=tertiary_link][!surface], 
	way[highway=unclassified][!surface], way[highway=track][!surface] {
		set surface=unpaved;
	}
	way[highway=service][!surface], way[highway=residential][!surface],
	way[highway=secondary][!surface], way[highway=secondary_link][!surface],
	way[highway=primary][!surface], way[highway=primary_link][!surface],
	way[highway=trunk][!surface], way[highway=trunk_link][!surface],
	way[highway=motorway][!surface], way[highway=motorway_link][!surface] {
		set surface=paved;
	}
	/* Default oneway */
	way[highway=motorway][!oneway], way[highway=motorway_link][!oneway],
	way[highway=trunk][!oneway], way[highway=trunk_link][!oneway],
	way[highway=primary_link][!oneway] {
		set oneway=yes;
	}
	way[highway][!oneway] {
		set oneway=no;
	}
	/* Default lanes */
	way[highway=motorway][oneway?][!lanes],
	way[highway=trunk][oneway?!][!lanes] {
		set lanes=3;
	}
	way[highway=motorway][oneway?!][!lanes] {
		set lanes=5;
	}
	way[highway=trunk][oneway?][!lanes] {
		set lanes=2;
	}
	way[highway=track][!lanes],
	way[highway=footway][!lanes],
	way[highway=cycleway][!lanes],
	way[highway=unclassified][oneway?!][!lanes],
	way[highway=tertiary][oneway?!][!lanes],
	way[highway=residential][oneway?!][!lanes] {
		set lanes=1;
	}
	way[highway][!lanes] {
		set lanes=2;
	}
	/* Default Maxspeed */
	way[highway=motorway][!maxspeed] {
		set maxspeed=110;
	}
	way[highway=trunk][!maxspeed], way[highway=primary][!maxspeed] {
		set maxspeed=80;
	}
	way[highway=secondary][!maxspeed], way[highway=tertiary][!maxspeed] {
		set maxspeed=60;
	}
	way[highway=unclassified][!maxspeed] {
		set maxspeed=50;
	}
	way[highway=residential][!maxspeed] {
		set maxspeed=40;
	}
	way[highway=track][!maxspeed] {
		set maxspeed=30;
	}
	way[highway=service][!maxspeed] {
		set maxspeed=20;
	}
	way[highway][surface=unpaved],way[highway][surface=ground],way[highway][surface=compacted],way[highway][surface=dirt],
	way[highway][surface=fine_gravel],way[highway][surface=gravel],way[highway][surface=mud],way[highway][surface=clay],
	way[highway][surface=pebbles],way[highway][surface=sand],way[highway][surface=scree] {
		set "DNIT:Surface"=unpaved;
	}
	way[highway][surface=paved],way[highway][surface=sett],way[highway][surface=grass_paver],way[highway][surface=metal],
	way[highway][surface=paving_stones],way[highway][surface=pebblestone],way[highway][surface=wood],way[highway][surface=cobblestone],
	way[highway][surface=asphalt],way[highway][surface=asfalt],way[highway][surface=concrete],way[highway][surface=tarmac] {
		set "DNIT:Surface"=paved;
	}
	way["DNIT:Surface"=unpaved][highway] {
		set "DNIT:Class"=IMP; /* Implantada */
	}
	way["DNIT:Surface"=unpaved][highway=unclassified],
	way["DNIT:Surface"=unpaved][highway=track] {
		set "DNIT:Class"=LEN; /* Leitão Natural */
	}
	way["DNIT:Surface"=paved][highway=track],
	way["DNIT:Surface"=paved][highway=unclassified],
	way["DNIT:Surface"=paved][highway=tertiary],
	way["DNIT:Surface"=paved][highway=tertiary_link] {
		set "DNIT:Class"=EOP; /* Em Pivementação */
	}
	way["DNIT:Surface"=paved][highway=secondary],
	way["DNIT:Surface"=paved][highway=secondary_link],
	way["DNIT:Surface"=paved][highway=primary],
	way["DNIT:Surface"=paved][highway=primary_link],
	way["DNIT:Surface"=paved][highway=trunk][oneway?!],
	way["DNIT:Surface"=paved][highway=trunk_link][oneway?!],
	way["DNIT:Surface"=paved][highway=motorway][oneway?!],
	way["DNIT:Surface"=paved][highway=motorway_link][oneway?!] {
		set "DNIT:Class"=PAV; /* Pimementada */
	}
	relation[route=road] >[role=forward] way[oneway?][!junction],
	relation[route=road] >[role=backward] way[oneway=-1][!junction],
	way["DNIT:Surface"=paved][highway=trunk][oneway?][!junction],
	way["DNIT:Surface"=paved][highway=trunk_link][oneway?][!junction],
	way["DNIT:Surface"=paved][highway=motorway][oneway?][!junction],
	way["DNIT:Surface"=paved][highway=motorway_link][oneway?][!junction] {
		set "DNIT:Class"=DUP; /* Duplicada */
	}
	way[highway=planned] {
		set "DNIT:Class"=PLA; /* Planejado */
	}
}

way|z5[highway][network].highway, relation[route=road][network] > way.highway {
	width:				4;
}
way|z3-5[highway].rodovia_estadual {
	width:				4;
}
way|z-5[highway].rodovia_federal {
	width:				4;
}

way|z-10[highway][surface=ground].highway,
way|z-10[highway][surface=compacted].highway,
way|z-10[highway][surface=dirt].highway,
way|z-10[highway][surface=fine_gravel].highway,
way|z-10[highway][surface=gravel].highway,
way|z-10[highway][surface=mud].highway,
way|z-10[highway][surface=clay].highway,
way|z-10[highway][surface=pebbles].highway,
way|z-10[highway][surface=sand].highway,
way|z-10[highway][surface=scree].highway,
way|z-10[highway][surface=unpaved].highway {
	color:				white;
	dashes:				5,2;
	set	.highway;
}
way|z10-[highway][surface=ground].highway,
way|z10-[highway][surface=compacted].highway,
way|z10-[highway][surface=dirt].highway,
way|z10-[highway][surface=fine_gravel].highway,
way|z10-[highway][surface=gravel].highway,
way|z10-[highway][surface=mud].highway,
way|z10-[highway][surface=clay].highway,
way|z10-[highway][surface=pebbles].highway,
way|z10-[highway][surface=sand].highway,
way|z10-[highway][surface=scree].highway,
way|z10-[highway][surface=unpaved].highway {
	color:				lightgray;
	dashes:				5,2;
	set .highway;
}
way|z10-[highway][surface=sett].highway,
way|z10-[highway][surface=grass_paver].highway,
way|z10-[highway][surface=metal].highway,
way|z10-[highway][surface=paving_stones].highway,
way|z10-[highway][surface=pebblestone].highway,
way|z10-[highway][surface=wood].highway,
way|z10-[highway][surface=cobblestone].highway {
	color:				brown;
	dashes:				5,2;
	set	.highway;
}

@media (user-agent: josm) {
	way|z12-[highway][!surface].highway {
		color:				lightgray;
		dashes:				3,2;
		dashes-background-color:	pink;
	}
}

way|z10-[highway=planned].highway {
	color:				white;
	width:				1;
	dashes:				20,20,10,20;
	casing-dashes:		20,20,10,20;
}

way|z8-[highway=construction].highway {
	color:				white;
	width:				2;
	dashes:				20,20;
	casing-dashes:		20,20;
}
@media (user-agent: josm) {
	way|z8-[highway=road].highway { 
		width:				2;
		dashes:				20,20;
		dashes-background-color:	red;
	}
}

way|z14-[highway=path].highway {
	color:				green;
	casing-width:		1;
	casing-color:		brown;
	dashes:				6,4,4,4;
}
way|z14-[highway=footway].highway {
	color:				limegreen;
	casing-color:		limegreen;
	casing-width:		2;
}
way|z12-[highway=cycleway].highway {
	color:				violet;
	casing-color:		violet;
	casing-width:		2;
}
way|z12-[highway=track].highway {
	casing-width:		1;
	casing-color:		brown;
}
way|z12-[highway=track][tracktype=grade1].highway {
	dashes:				10,4,8,4;
}
way|z12-[highway=track][tracktype=grade2].highway {
	dashes:				10,4,6,4;
}
way|z12-[highway=track][tracktype=grade3].highway {
	dashes:				10,4,4,4;
}
way|z12-[highway=track][tracktype=grade4].highway {
	dashes:				10,4,2,4;
}
way|z12-[highway=track][tracktype=grade5].highway {
	dashes:				10,6,2,6;
}

way|z10-[highway=service].highway,
way|z10-[highway=residential].highway {
	width:				2;
}

way|z10-[highway=unclassified].highway {
	width:				2;
}

way|z8-[highway=tertiary_link].highway {
	width:				3;
}
way|z6-[highway=tertiary].highway {
	width:				3;
}

way|z7-[highway=secondary_link].highway {
	width:				4;
}
way|z6-[highway=secondary].highway {
	width:				4;
}

way|z6-[highway=primary_link].highway {
	width:				5;
}
way|z4-[highway=primary].highway {
	width:				5;
}

way|z4-[highway=trunk_link].highway {
	width:				3;
}
way|z3-[highway=trunk].highway {
	width:				3;
	casing-width:		3;
}

way|z4-[highway=motorway_link].highway {
	width:				3;
}
way|z2-[highway=motorway].highway {
	width:				3;
	casing-width:		4;
/*	color:				white; */
}

relation[type=route][route=road] >[role=forward] way[highway][oneway?][!junction].highway {
	left-casing-color:	white;
	left-casing-width:	5;
	left-casing-opacity: 0.9
}
relation[type=route][route=road] >[role=backward] way[highway][oneway=-1][!junction].highway {
	right-casing-color:	white;
	right-casing-width:	5;
	right-casing-opacity: 0.9;
}

/* High zoom levels should render the true width of the road */
@media (user-agent: pgmapcss) { 
	way|z18-[highway].highway {
		width:				eval(any(tag(width), set_width_in_meters(3 * tag(lanes))));
		casing-width:		3;
	}
}

way|z4-[highway][operator].highway::operator, relation[type=route][route=road][operator] > way[highway].highway::operator {
	/* Highway have concecionario, need to add a yellow halo to the road, in addition to the casing */
	object-z-index:		-1;
	casing-width:		+4;
	casing-color:		yellow;
}
way|z8-[higway][toll].highway::toll, relation[type=route][route=road][toll] > way[highway].highway::operator {
	/* Highway with toll fee to be rendered with a green halo on high zoom levels */
	object-z-index:		-2;
	casing-width:		+5;
	casing-color:		limegreen;
}

way|z8-[highway][noname?].highway, way[highway][unsigned?].highway, way[highway][unnamed?].highway {
	/* Unnamed highways render default "Sem Nome" */
	text:				eval("Sem Nome");
	text-halo-radius:	1;
	text-halo-color:	white;
	font-style:			italic;
	text-color:			gray;
}

relation[type=route][route=road] > way,
relation[type=route][route=street] > way {
	/* If unnamed way is part of a named road/street relation, take name from relation */
	text:				any(parent_tag("name:pt"), parent_tag("name"), parent_tag("official_name"), parent_tag("alt_name"), parent_tag("loc_name"), parent_tag("old_name"));
	text-color:			black;
	text-halo-radius:	1;
	text-halo-color:	white;
}
relation[type=associatedStreet] >[role=street] way {
	/* If unnamed way is part of a named associatedStreet relation, take name from relation */
	text:				any(parent_tag("name:pt"), parent_tag("name"), parent_tag("official_name"), parent_tag("alt_name"), parent_tag("loc_name"), parent_tag("old_name"));
	text-color:			black;
	text-halo-radius:	1;
	text-halo-color:	white;
}

way[highway].highway {
	/* Default names for highway is tagged on the way itself */
	text:				any(tag("name:pt"), tag("name"), tag("official_name"), tag("alt_name"), tag("loc_name"), tag("old_name"));
	text-color:			black;
	text-halo-radius:	1;
	text-halo-color:	white;
}
/* To force correct use of name, and use of proper tags where the streets have no name */
way|z8-[highway][name*="Sem Denominacao"].highway,
way|z8-[highway][name*="Sem Denominação"].highway,
way|z8-[highway][name*="Sem Nome"].highway {
	/* Any form of "Sem Nome" (un-named) should be overrided and printed in a different color, wrong use of name tag */
	text:				eval("Sem Nome");
	text-halo-radius:	1;
	text-halo-color:	white;
	font-style:			italic;
	text-color:			red;
}
way|z8-[highway][!bridge?!].highway { /* tag bridge set, but not bridge=no */
	/* Name of the bridge instead of name of the highway, if set, to be printed on bridges */
	text:				any(tag("bridge_name:pt"), tag("bridge_name"), tag("official_name"), tag("name:pt"), tag("name"), tag("alt_name"), tag("loc_name"), tag("old_name"));
}
way|z8-[highway][!tunnel?!].highway { /* tag tunnel set, but not tunnel=no */
	/* Name of the tunnel instead of name of the highway, if set, to be printed on tunnels */
	text:				any(tag("tunnel_name:pt"), tag("tunnel_name"), tag("official_name"), tag("name:pt"), tag("name"), tag("alt_name"), tag("loc_name"), tag("old_name"));
}
/* Creating shields */
way[highway][ref].highway, relation[type=route][route=road][ref] > way[highway].highway {
	/* Default shield (Municipal highways) */
	shield-text:		any(tag(ref), parent_tag(ref));
	shield-image:		"icons/shield-default.svg";
}
way[highway][ref].rodovia_estadual, relation[type=route][route=road][ref] > way[highway].rodovia_estadual {
	/* State Highway Shields */
	shield-text:		any(tag(ref), parent_tag(ref));
	shield-image:		"icons/shield-state.svg";
}
way[highway][ref].rodivia_federal, relation[type=route][route=road][ref] > way[highway].rodoovia_federal {
	/* Federal Highway Shields */
	shield-text:		any(tag(ref), parent_tag(ref));
	shield-image:		"icons/shield-br.svg";
}

relation[type=enfocement][enforcement=maxweight] >[role=device] * {
	/* Weighing Station */
	icon-image:			"icons/pesagem.svg";
	icon-width:			12;
}

node[amenity=police][name="~/.*rodoviaria*/i"] {
	/* Highway Police */
	icon-image:			"icons/policia_rodoviaria.svg";
	icon-width:			16;
}

node|z6-[barrier=toll_booth] {
	/* Toll booth (pedagio) */
	icon-image:			"icons/pedagio.svg";
	icon-width:			12;
}
@media (user-agent: pgmapcss) { 
	node[barrier=toll_booth] near[distance<100] {
		/* No render, override second booth if too close to other */
		icon-image:			"icons/void.svg";
		icon-width:			0;
		icon-height:		0;
		icon-opacity:		0.0;
	}
}

node|z10-[highway=traffic_signals] {
	/* Traffic signal */
	icon-image:			"icons/semaforo.svg";
	icon-width:			12;
}
@media (user-agent: pgmapcss) {
	node[highway=traffic_signals] near[distance<20] {
		/* No render, override second traffic signal if too close to other */
		icon-image:			"icons/void.svg";
		icon-width:			0;
		icon-height:		0;
		icon-opacity:		0.0;
	}
}

/*
 * Waterways and water-cover
 */
*[waterway],
*[natural=water],
*[landuse=reservoir],
*[landuse=basin] {
	color:				darkblue;
	width:				4;
	set .waterway;
}
way|z4-[waterway=river].waterway {
	width:				8;
}
way|z6-[waterway=canal].waterway {
	width:				6;
}
way|z8-[waterway=stream].waterway {
	width:				4;
}
way|z10-[waterway=ditch].waterway {
	width:				3;
}
way|z13-[waterway=drain].waterway {
	width:				2;
}

area[natural=water]:closed,
area[waterway=riverbank]:closed,
area[landuse=reservoir]:closed,
area[landuse=basin]:closed,
area[waterway=canal]:closed {
	fill-color:			skyblue;
}
/*
 * Wetland
 */
area|z4-[natural=wetland] {
	/* Default fill */
	fill-image:			"icons/fill/alogado.svg";
}
/*
 * Woodland
 */
 area|z8-[natural=wood], area|z8-[landuse=forest] {
	fill-color:			forestgreen;
 }
 area|z13-[natural=scrub] {
	fill-color:			forestgreen;
	fill-opacity:		0.5;
 }
 
/*
 * Other Landscape Features
 */
area|z13-[landuse=farm],area|z13-[landuse=farmland],area|z13-[landuse=meadow],area|z13-[landuse=orchard] {
	/* default farmland */
	fill-color:			cornsilk;
}
area|z13-[landuse=industrial] {
	fill-color:			gray;
}

/*
 * Urban features
 */
area|z2-12[landuse=residential] {
	fill-color:			yellow;
}
area|z13-[landuse=residential] {
	fill-color:			lightgray;
}
area|z8-[building] {
	fill-color:			orange;
}
